<?php

/**
 * @file
 * EDW Maps module hooks.
 */

use Drupal\edw_maps\Plugin\views\style\MapboxMapStyle;

/**
 * Implements hook_theme().
 */
function edw_maps_theme($existing, $type, $theme, $path) {
  return [
    'views_view_mapbox_map' => [
      'variables' => [
        'mapContainerId' => NULL,
        'exposedFilters' => FALSE,
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_views_view().
 */
function edw_maps_preprocess_views_view(&$variables) {
  if (!isset($variables['view'])) {
    return;
  }

  if ($variables['view']->style_plugin instanceof MapboxMapStyle) {
    if (!empty($variables['exposed'])) {
      $variables['exposed']['#attributes']['class'][] = 'exposed-mapbox-filters';
      $variables['attributes']['class'][] = 'view-mapbox';
    }
  }
}

/**
 * Implements hook_ajax_render_alter().
 */
function edw_maps_ajax_render_alter(array &$data) {
  foreach ($data as &$command) {
    if ($command['command'] === 'settings'
      && isset($command['settings']['edw_map'])
      && isset($command['settings']['views'])) {
      $command['merge'] = FALSE;
      return;
    }
  }
}

/**
 * Implements hook_edw_maps_pin_tooltip_data_alter().
 */
function edw_maps_edw_maps_pin_tooltip_data_alter(array &$variables) {
  // Function to alter pin tooltip data if rendered entity is used.
}

/**
 * Implements hook_edw_maps_country_tooltip_data_alter().
 */
function edw_maps_edw_maps_country_tooltip_data_alter(array &$variables) {
  // Function to alter country tooltip data if rendered entity is used.
}

/**
 * Implements hook__edw_maps_area_tooltip_data_alter().
 */
function edw_maps_edw_maps_area_tooltip_data_alter(array &$variables) {
  // Function to alter area tooltip data if rendered entity is used.
}
